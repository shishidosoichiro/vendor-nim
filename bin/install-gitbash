#!/usr/bin/env sh

# Exit, if return non-zero or use an undefined variable.
set -eu

# Restore the current directory, if exit.
pwd="$PWD"
trap "cd \"$pwd\"" EXIT

# cd workdir
scriptfile="$(realpath "$0")"
bin="$(dirname "$scriptfile")"
workdir="$(dirname "$bin")"
cd "$workdir"

# Variables
VERSION=${1:-0.19.2}
ARCHITECTURE=x64
ARCHIVE_BASE=nim-$VERSION
ARCHIVE_FILE=${ARCHIVE_BASE}_${ARCHITECTURE}.zip
DOWNLOAD_URL=https://nim-lang.org/download/$ARCHIVE_FILE

# Clean
clean() {
	rm -rf temp
}

# Download
download() {
  mkdir -p temp
  cd temp
  rm -rf $ARCHIVE_FILE
  curl --progress-bar --show-error --location --remote-header-name --remote-name $DOWNLOAD_URL
  cd ..
}

# Extract
extract() {
  mkdir -p temp
  cd temp
  rm -rf $ARCHIVE_BASE
  unzip $ARCHIVE_FILE
  cd ..
}

# Move
move() {
  rm -rf versions/$VERSION/main
  mkdir -p versions/$VERSION/main
  mv temp/$ARCHIVE_BASE/* versions/$VERSION/main
}

# Install
install() {
  cd versions/$VERSION/main
  #nim.exe is not in your PATH environment variable.
  #Should it be added permanently? (y/n) n
  #** is not in your PATH environment variable.
  #Should it be added permanently? (y/n) n
  #The following *incompatible* MingW installations exist
  #C:\Program Files\Git\mingw64\bin
  #*incompatible* means Nim and GCC disagree on the size of a pointer.
  #No compatible MingW candidates found in the standard locations [Error]
  #Do you want to download MingW from Nim's website? (y/n)
  #Patching Nim's config to use:
  #D:\shishidosoichiro\Documents\seap\draft\nim\dev\nim\versions\0.19.2\main\dist\mingw64\bin
  #Would like to add Nim-0.19.2 to your start menu? (y/n)
  echo -e "n\nn\ny\nn\n" | ./finish.exe
  cd ../../..
}

# Start
clean
download
extract
move
install
